
@inject ValuedTime.App.Services.CurrentDayService ActivityLogService;

<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
    <StartTimeInput MinimumStartTime="_minimumStartTime" @bind-StartTime="_startTime" />
    <MudTextField T="string" @bind-Value="_name" Label="Name" />
    <TimeEstimateInput @bind-Estimate="_estimate" />
    <LifeValueSelector @bind-SelectedLifeValueIds="_selectedLifeValueIds" />
    <div>
        <MudButton OnClick="OnCancel">Cancel</MudButton>
        <MudButton OnClick="Submitted">Start</MudButton>
    </div>
</MudForm>

@code {
    [Parameter]
    public EventCallback<StartNewActivityCommand> OnSubmit { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }


    string? _name;
    List<Guid> _selectedLifeValueIds = new();
    TimeSpan? _estimate = TimeSpan.FromMinutes(15);
    DateTime _startTime = DateTime.Now;
    DateTime _minimumStartTime = DateTime.Now.Date;

    bool success;
    string[] errors = { };
    MudForm? form;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _minimumStartTime = await ActivityLogService.GetMinimumStartTimeAsync(_startTime);
        }
    }

    async Task Submitted()
    {
        await OnSubmit.InvokeAsync(new StartNewActivityCommand
        {
           ActivityName = _name,
           StartTime = _startTime,
           Estimate = _estimate,
           LifeValueIds = _selectedLifeValueIds
        });
    }
}
